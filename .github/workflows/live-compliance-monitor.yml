name: 🔄 Live Compliance Monitor
on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:
  push:
    paths:
      - 'compliance/**'
      - 'docs/**'
      - '.github/workflows/**'

env:
  COMPLIANCE_API_VERSION: "2024.09"
  MONITORING_ENABLED: true

jobs:
  compliance-monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 Install Dependencies
      run: |
        pip install -r requirements.txt
        # Make optional dependencies non-fatal
        pip install compliance-checker || echo "Warning: Could not install compliance-checker"
        pip install risk-assessor || echo "Warning: Could not install risk-assessor"
        # Install jq for JSON processing
        sudo apt-get update && sudo apt-get install -y jq
    
    - name: 🔍 Check Compliance Scripts
      id: check-scripts
      run: |
        # Create placeholder JSON files for missing scripts
        if [ ! -f "scripts/scan_eu_ai_act.py" ]; then
          echo '{"status":"skipped","message":"Script not found"}' > eu_status.json
          echo "eu_script_missing=true" >> $GITHUB_OUTPUT
        fi
        
        if [ ! -f "scripts/gdpr_compliance_check.py" ]; then
          echo '{"status":"skipped","message":"Script not found"}' > gdpr_status.json
          echo "gdpr_script_missing=true" >> $GITHUB_OUTPUT
        fi
        
        if [ ! -f "scripts/monitor_international.py" ]; then
          echo '{"status":"skipped","message":"Script not found"}' > intl_status.json
          echo "intl_script_missing=true" >> $GITHUB_OUTPUT
        fi
    
    - name: 🔍 Scan EU AI Act Updates
      id: eu-scan
      if: steps.check-scripts.outputs.eu_script_missing != 'true'
      run: |
        python scripts/scan_eu_ai_act.py --check-updates --format json > eu_status.json || \
          echo '{"status":"error","message":"Script execution failed"}' > eu_status.json
        echo "eu_status=$(jq -r '.status' eu_status.json)" >> $GITHUB_OUTPUT
    
    - name: 🛡️ Check GDPR Compliance
      id: gdpr-check
      if: steps.check-scripts.outputs.gdpr_script_missing != 'true'
      run: |
        python scripts/gdpr_compliance_check.py --audit --report json > gdpr_status.json || \
          echo '{"status":"error","message":"Script execution failed"}' > gdpr_status.json
        echo "gdpr_status=$(jq -r '.status' gdpr_status.json)" >> $GITHUB_OUTPUT
    
    - name: 🌍 Monitor International Standards
      id: intl-monitor
      if: steps.check-scripts.outputs.intl_script_missing != 'true'
      run: |
        python scripts/monitor_international.py --sources NIST,WIPO,UN --format json > intl_status.json || \
          echo '{"status":"error","message":"Script execution failed"}' > intl_status.json
        echo "intl_status=$(jq -r '.status' intl_status.json)" >> $GITHUB_OUTPUT
    
    - name: 📊 Generate Status Report
      run: |
        python scripts/generate_status_report.py \
          --eu-status "${{ steps.eu-scan.outputs.eu_status }}" \
          --gdpr-status "${{ steps.gdpr-check.outputs.gdpr_status }}" \
          --intl-status "${{ steps.intl-monitor.outputs.intl_status }}" \
          --output compliance_report.md
    
    - name: 🏷️ Update Dynamic Badges
      run: |
        python scripts/update_dynamic_badges.py \
          --compliance-report compliance_report.md \
          --badge-endpoint "https://img.shields.io/badge" \
          --update-readme
    
    - name: 🔄 Update Interactive Dashboard
      run: |
        python scripts/update_dashboard.py \
          --status-file compliance_report.md \
          --dashboard docs/VSCODE_INTEGRATION.md
    
    - name: 📈 Create Trend Analysis
      run: |
        python scripts/create_trends.py \
          --historical-data compliance/historical/ \
          --current-status compliance_report.md \
          --output docs/trends.json
    
    - name: ⚠️ Risk Assessment Update
      id: risk-assessment
      run: |
        python scripts/update_risk_register.py \
          --compliance-status compliance_report.md \
          --threat-intel enabled \
          --output docs/risk_update.json
        echo "risk_level=$(cat docs/risk_update.json | jq -r '.overall_risk')" >> $GITHUB_OUTPUT
    
    - name: 📧 Notification Setup
      if: steps.risk-assessment.outputs.risk_level == 'HIGH'
      run: |
        python scripts/send_alerts.py \
          --level HIGH \
          --message "High risk compliance issues detected" \
          --channels email,slack
    
    - name: 💾 Commit Updates
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git diff --staged --quiet || git commit -m "🤖 Auto-update: Compliance monitoring $(date -u +%Y-%m-%d_%H:%M:%S)"
        git push
    
    - name: 📋 Summary Comment
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('compliance_report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🔍 Compliance Monitoring Report\n\n${report}\n\n*Auto-generated by compliance monitor*`
          });